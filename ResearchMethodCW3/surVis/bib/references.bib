@article{Milefe_2022_GPU-Render,
  abstract = {The graphics processing unit (GPU) has now become an integral part of our lives through both desktop and portable devices. Thanks to dedicated hardware, visualization has been significantly accelerated, softwares today only use the GPU for rasterization. As a result of this development, now we use only triangle-based rendering, and pixelbased image manipulations can only be performed using shaders. It can be stated that today's GPU pipeline cannot provide the same flexibility as the previous software implementation. This paper discusses an effcient software implementation of pixel-based rasterization. After reviewing the current GPU-based drawing process, we will show how to access pixel level drawing in this environment. Finally, a more effcient storage and display format than the classic solution is presented, which performance far exceeds the previous solution.},
  author = {Milefe, Peter and Dudra, Judit},
  doi = {10.32968/psaie.2022.1.1.},
  journal = {Production Systems and Information Engineering},
  keywords = {type:pipeline, Softwarerendering, optimization, pixelrasterization},
  number = {1},
  publisher = {University of Miskolc (Institute of Informatics)},
  volume = {10},
  title = {Effective Pixel Rendering in Practice},
  url = {https://ojs.uni-miskolc.hu/index.php/psaie/article/view/1829/1544},
  year = {2022},
  series = {PS&IE},
}
@article{Recorda_2024_Polyx,
  abstract = {Historically, game development faced significant hardware and software constraints, which limited design and gameplay innovation. However, the actual advancements in technology and the availability of commercial state-of-the-art game engines have "democratised" game development, empowering developers to focus more on their games and creative vision. In recent years, there has been a growing interest among some developers in exploring 3D pixel art, although with barely a handful of known projects being made in this vein, and less than that being released to the market, these developments have served as the inspiration behind this project, on wanting to develop a 3D pixel art technology and make this novel set of techniques open source and documented to any developer. Unlike other established styles such as Toon shading, Physically based shading, and traditional 2D pixel art, among others, the publicly available documentations for achieving proper 3D pixel art are scant and sparse. This project addresses this gap by providing a new open-source solution for 3D pixel art as well as the documentation of how it works, detailing the methodologies and processes involved while aiming to establish 3D pixel art as a viable and appealing graphical style. Finally, the project has successfully achieved its objectives by not only delivering a new 3D pixel art solution and the first complete documentation but also demonstrating its practical application in a video game through the development of a prototype demo.},
  author = {Recordá Illas, Robert},
  journal = {Universitat Politècnica de Catalunya},
  keywords = {type:state-of-art, Shader, Isometric, Video game, Rendering, Unity, 3D, Pixel, Orthographic, Art, Polyx, Post-processing},
  publisher = {Universitat Politècnica de Catalunya},
  series = {UPC},
  title = {Developing 3D Pixel Art Rendering},
  url = {http://hdl.handle.net/2117/416925},
  year = {2024},
}
@article{Lansdown_1995_stylized,
  abstract = {The success of graphics systems that render photorealistic output has obscured parallel developments in nonphotorealistic rendering. A review of these "expressive" systems suggests a framework for further development. One of the authors, Simon Schofield, has developed a prototype system that gives users a wide variety of automatic rendering styles-from the almost photorealistic, through the styles resembling artists' sketches or paintings, to abstract renderings of entirely new forms. The significant problems associated with NPR are primarily aesthetic and only secondarily technical. The culturally oriented theoretical problems surrounding the field are many and, at their most difficult, broach central issues of perception and representation. We therefore begin by discussing the limitations of photorealism as a representational style. However, the technical problems of implementing an NPR system are not trivial. As far as we know, the literature defines no general framework for an NPR system, although it does include an array of more focused solutions. We survey more than 15 of these solutions. On the basis of this survey, we then define a framework for NPR systems that distinguishes them from systems focused on photorealism. We also identify the characteristics of NPR systems that go beyond the tendency to simulate traditional media, functioning instead as 3D renderers. In this context, we briefly describe Schofield's system, called Piranesi, which operates this way.},
  journal={IEEE Computer Graphics and Applications}, 
  title={Expressive rendering: a review of nonphotorealistic techniques}, 
  year={1995},
  volume={15},
  number={3},
  pages={29-37},
  keywords={type:stylized ,Rendering (computer graphics), Art, Layout, Computer graphics, Image generation, Production, Virtual reality, TV, Design automation, Laboratories},
  doi={10.1109/38.376610},
  url={https://ieeexplore.ieee.org/abstract/document/376610},
  author = {Lansdown, John and Schofield, Simon},
  publisher = {IEEE},
  series = {CG&A},
}
@article{Lei_2023_2D-pixel,
  abstract = {Pixel art has evolved from a primitive computer image presentation to an independent digital art style. It is widely used on the internet, for graphic user interface (GUI) design, and game industries. Existing pixelation tools and algorithms generate pixel images with artifacts, color clutter, blurring, and a lack of aesthetics. Generally, aesthetics are the dominant concern for pixel art. In this paper, an art-oriented pixelation (AOP) algorithm is proposed to effectively retain the main features of the original image content and the integrity of essential details with the artistic and aesthetic styles. At the same time, the AOP algorithm enables high-quality pixel image generation of arbitrary size without paired datasets and model training effort. The experimental results demonstrate that the pixel image generated by the AOP algorithm outperforms existing algorithms and tools in terms of aesthetics.},
  author = {Lei, Peng and Xu, Shuchang and Zhang Sanyuan},
  doi = {10.1007/s00371-022-02763-0},
  journal = {The Visual Computer},
  keywords = {type:2D-pixel, Pixelation, Pixel art, Image processing, AOP algorithms},
  number = {1},
  publisher = {Springer},
  volume = {40},
  title = {An art-oriented pixelation method for cartoon images},
  url = {https://link.springer.com/article/10.1007/s00371-022-02763-0},
  year = {2023},
  series = {TVC},
}
@article{Kaplan_2000_stylized,
  abstract = {We present an algorithm for rendering subdivision surface models of complex scenes in a variety of artistic styles using an interactively editable particle system. The algorithm is suitable for modeling artistic techniques explicitly by the user, or automatically by the system. Our approach can simulate a large number of artistic effects due to the fact that almost any type of mark made on paper or canvas can be imitated. Any of our artistic effects is customizable by the user through a particle editing interface. The algorithm maintains complete frame-to-frame coherence, a characteristic required for good animation, and runs at interactive rates on current computer graphics workstations.},
  author = {Kaplan, Matthew and Gooch, Bruce and Cohen, Elaine},
  doi = {10.1145/340916.340925},
  journal = {NPAR '00: Proceedings of the 1st international symposium on Non-photorealistic animation and rendering},
  keywords = {type:stylized, interaction, illustration, non-photorealistic rendering, silhouettes, lighting models},
  publisher = {Association for Computing Machinery},
  title = {Interactive Artistic Rendering},
  url = {https://dl.acm.org/doi/10.1145/340916.340925},
  year = {2000},
  series = {NPAR},
}
@article{Gerstner_2012_2D-pixel,
  abstract = {We present an automatic method that can be used to abstract high resolution images into very low resolution outputs with reduced color palettes in the style of pixel art. Our method simultaneously solves for a mapping of features and a reduced palette needed to construct the output image. The results are an approximation to the results generated by pixel artists. We compare our method against the results of a naive process common to image manipulation programs, as well as the hand-crafted work of pixel artists. Through a formal user study and interviews with expert pixel artists we show that our results offer an improvement over the naive methods.},
  author = {Gerstner, Timothy and DeCarlo, Doug and Alexa, Marc and Finkelstein, Adam and Gingold, Yotam and Nealen, Andrew},
  doi = {10.5555/2330147.2330154},
  journal = {NPAR '12: Proceedings of the Symposium on Non-Photorealistic Animation and Rendering},
  keywords = {type:2D-pixel, pixel art, image abstraction, non-photorealistic rendering, image segmentation, color quantization},
  publisher = {Eurographics Association},
  title = {Pixelated Image Abstraction},
  url = {https://dl.acm.org/doi/10.5555/2330147.2330154},
  year = {2012},
  series = {NPAR},
}
@article{Inglis_2012_2D-pixel,
  abstract = {Creating pixel art is a laborious process that requires artists to place individual pixels by hand. Although many image editors provide vector-to-raster conversions, the results produced do not meet the standards of pixel art: artifacts such as jaggies or broken lines frequently occur. We describe a novel Pixelation algorithm that rasterizes vector line art while adhering to established conventions used by pixel artists. We compare our results through a user study to those generated by Adobe Illustrator and Photoshop, as well as hand-drawn samples by both amateur and professional pixel artists.},
  author = {Inglis, Tiffany and Kaplan, Craig},
  doi = {10.5555/2330147.2330153},
  journal = {NPAR '12: Proceedings of the Symposium on Non-Photorealistic Animation and Rendering},
  keywords = {type:2D-pixel, rasterization, pixel art},
  publisher = {Association for Computing Machinery},
  title = {Pixelating Vector Line Art},
  url = {https://dl.acm.org/doi/10.1145/2342896.2343021},
  year = {2012},
  series = {NPAR},
}
@article{Lee_2006_stylized,
  abstract = {This paper presents a real-time technique for rendering 3D meshes in the pencil drawing style. We analyze the characteristics of pencil drawing and incorporate them into the rendering process, which is fully implemented on a GPU. For object contours, we propose a multiple contour drawing technique that imitates trial-and-errors of human in contour drawing. For interior shading, we present a simple approach for mapping oriented textures onto an object surface. To improve the quality of pencil rendering, we generate and map pencil textures that reflect the properties of graphite pencils and paper. We show several rendering examples that demonstrate the high performance of the proposed technique in terms of speed and quality.},
  author = {Lee, Hyunjun and Kwon, Sungtae and Lee, Seungyong},
  doi = {10.1145/1124728.1124735},
  journal = {NPAR '06: Proceedings of the 4th international symposium on Non-photorealistic animation and rendering},
  keywords = {type:stylized, non-photorealistic rendering, pencil drawing, GPU rendering, multiple contour drawing, pencil texture},
  publisher = {Association for Computing Machinery},
  title = {Real-Time Pencil Rendering},
  url = {https://dl.acm.org/doi/10.1145/1124728.1124735},
  year = {2006},
  series = {NPAR},
}
@article{Marvie_2011_pipeline,
  abstract = {We introduce procedural geometry mapping and ray-dependent grammar development for fast and scalable render-time generation of procedural geometric details on graphics hardware. By leveraging the properties of the widely used split grammars, we replace geometry generation by lazy per-pixel grammar development. This approach drastically reduces the memory costs while implicitly concentrating the computations on objects spanning large areas in image space. Starting with a building footprint, the bounding volume of each facade is projected towards the viewer. For each pixel we lazily develop the grammar describing the facade and intersect the potentially visible split rules and terminal shapes. Further geometric details are added using normal and relief mapping in terminal space. Our approach also supports the computation of per-pixel self shadowing on facades for high visual quality. We demonstrate interactive performance even when generating and tuning large cityscapes comprising thousands of facades. The method is generalized to arbitrary mesh-based shapes to provide full artistic control over the generation of the procedural elements, making it also usable outside the context of urban modeling.},
  author = {Marvie, Jean-Eudes and Gautron, Pascal and Hirtzlin, Patrice and Sourimant, Gael},
  doi = {10.5555/1992917.1992944},
  journal = {GI '11: Proceedings of Graphics Interface 2011},
  keywords = {type:pipeline, Grammars and Other Rewriting Systems, Computational Geometry and Object Modeling, Three-Dimensional Graphics and Realism, Applications, Computer-Aided Design (CAD)},
  publisher = {Canadian Human-Computer Communications Society},
  title = {Render-Time Procedural Per-Pixel Geometry Generation},
  url = {https://dl.acm.org/doi/10.5555/1992917.1992944},
  year = {2011},
  series = {GI},
}
@article{Lake_2000_stylized,
  abstract = {Researchers in nonphotorealistic rendering (NPR) have investigated a variety of techniques to simulate the styles of artists. Recent work has resulted in methods for pen-and-ink illustration, pencil sketching, watercolor, engraving, and silhouette edge rendering. This paper presents real-time methods to emulate cartoon styles. We also present variations on a texture mapping technique to achieve real-time pencil sketching. We demonstrate our method of inking silhouettes, material and mesh boundaries, and crease edges. In addition, we present techniques for emphasizing motion of cartoon objects by introducing geometry into the cartoon scene. The rendering system is integrated with an animation system and a runtime multiresolution mesh (MRM) system to achieve scalability, ensuring real-time performance on any platform. Such solutions allow us to take advantage of evolving hardware in order to make nonphotorealistic animation and rendering achievable on low- and high-end consumer platforms. All of the techniques described can be applied to models created with standard modeling tools and require no additional mark-up information from the modeler.},
  author = {Lake, Adam and Marshall, Carl and Harris, Mark and Blackstein, Mare},
  doi = {10.1145/340916.340918},
  journal = {NPAR '00: Proceedings of the 1st international symposium on Non-photorealistic animation and rendering},
  keywords = {type:Stylized, real-time nonphotorealistic animation and rendering, silhouette edge detection, cartoon rendering, pencil sketch rendering, stylized rendering, cartoon effects.},
  publisher = {Association for Computing Machinery},
  title = {Stylized rendering techniques for scalable real-time 3D animation},
  url = {https://dl.acm.org/doi/10.1145/340916.340918},
  year = {2000},
  series = {NPAR},
}
